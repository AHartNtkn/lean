  Set: pp::colors
  Set: pp::unicode
  Assumed: vec : ℕ → Type
  Assumed: concat : ∀ (n m : ℕ), vec n → vec m → vec (n + m)
  Assumed: concat_assoc : ∀ (n1 n2 n3 : ℕ) (v1 : vec n1) (v2 : vec n2) (v3 : vec n3),
  v1 ; v2 ; v3 = cast (to_heq (congr2 vec (symm (Nat::add_assoc n1 n2 n3)))) (v1 ; (v2 ; v3))
  Assumed: empty : vec 0
  Assumed: concat_empty : ∀ (n : ℕ) (v : vec n), v ; empty = cast (to_heq (congr2 vec (symm (Nat::add_zeror n)))) v
  Defined: TypeM : (Type M+1)
  Assumed: n : ℕ
  Assumed: v : vec n
  Assumed: w : vec n
  Assumed: f : ∀ (A : TypeM), A → A
  Assumed: p : ∀ (A : TypeM), A → Bool
  Assumed: fax : ∀ (n m : ℕ) (v : vec n) (w : vec m), f (v ; (w ; v)) = v ; (w ; v)
p (f (v ; w ; empty ; (v ; empty))) ∧ v = cast (to_heq (congr2 vec (Nat::add_zeror n))) (v ; empty)
===>
p (v ; (w ; v))
checking proof
(p (f (v ; w ; empty ; (v ; empty))) ∧ v = cast (to_heq (congr2 vec (Nat::add_zeror n))) (v ; empty)) ==
(p (v ; (w ; v)))
