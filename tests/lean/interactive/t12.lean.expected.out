#   Set: pp::colors
  Set: pp::unicode
  Proved: T1 : ∀ (A B : Bool), A ∧ B → B ∧ A
theorem T1 (A B : Bool) (assumption : A ∧ B) : B ∧ A :=
    let lemma1 : A := and_eliml assumption, lemma2 : B := and_elimr assumption in and_intro lemma2 lemma1
# Proof state:
A : Bool, B : Bool, assumption : A ∧ B ⊢ A
## Proof state:
no goals
## Proof state:
A : Bool, B : Bool, assumption : A ∧ B, lemma1 : A ⊢ B
## Proof state:
no goals
## Proof state:
A : Bool, B : Bool, assumption : A ∧ B, lemma1 : A, lemma2 : B ⊢ B ∧ A
## Proof state:
no goals
##   Proved: T2 : ∀ (A B : Bool), A ∧ B → B ∧ A
# Proof state:
A : Bool, B : Bool, assumption : A ∧ B ⊢ A
## Proof state:
A : Bool, B : Bool, assumption::1 : A, assumption::2 : B ⊢ A
## Proof state:
no goals
## Proof state:
A : Bool, B : Bool, assumption : A ∧ B, lemma1 : A ⊢ B
## Proof state:
A : Bool, B : Bool, assumption::1 : A, assumption::2 : B, lemma1 : A ⊢ B
## Proof state:
no goals
## Proof state:
A : Bool, B : Bool, assumption : A ∧ B, lemma1 : A, lemma2 : B ⊢ B ∧ A
## Proof state:
A : Bool, B : Bool, assumption : A ∧ B, lemma1 : A, lemma2 : B ⊢ B
A : Bool, B : Bool, assumption : A ∧ B, lemma1 : A, lemma2 : B ⊢ A
## Proof state:
no goals
##   Proved: T3 : ∀ (A B : Bool), A ∧ B → B ∧ A
# Proof state:
A : Bool, B : Bool, assumption : A ∧ B ⊢ A
## Proof state:
A : Bool, B : Bool, assumption::1 : A, assumption::2 : B ⊢ A
## Proof state:
no goals
## Proof state:
A : Bool, B : Bool, assumption : A ∧ B, lemma1 : A ⊢ B
## Proof state:
A : Bool, B : Bool, assumption::1 : A, assumption::2 : B, lemma1 : A ⊢ B
## Proof state:
no goals
##   Proved: T4 : ∀ (A B : Bool), A ∧ B → B ∧ A
# 